all:

# we make topdir and topsrcdir absolute paths:
topdir := $(shell cd .. && /bin/pwd)
topsrcdir := $(shell /bin/pwd)
# we keep files_dir and build_dir paths relative to the top of the source tree (this directory):
files_dir = $1/files
build_dir = $(call files_dir,$1)/$(value $1_dir)
#
wget = cd $(call files_dir,$1) && rm -f $(shell basename $2) && wget $2
svn-checkout = cd $(call files_dir,$1) && svn co --quiet $2 $3
svn-update = cd $(call build_dir,$1) && svn co $2 $3
svn-get-release = cd $(call build_dir,$1) && ( svn info | grep Revision | sed 's/.*: //' )
git-clone = false obsolete
git-fetch = false obsolete
git-checkout = cd $(call build_dir,$1) && git checkout $2
untar-z = cd $(call files_dir,$1) && tar xzf $2
untar-j = cd $(call files_dir,$1) && tar xjf $2
install_dir = $(topdir)/encap-$(ENCAP_SER_NO)/$1-$(value $1_version)
files-command = cd $(call files_dir,$1) && $2
build-command = cd $(call build_dir,$1) && $2
configure = cd $(call build_dir,$1) && ./configure --prefix=$(call install_dir,$1) $2
make = cd $(call build_dir,$1) && make -w -j1 $2

export PATH := $(topdir)/bin:$(PATH)

define requires
$(foreach x,$2,$(eval $(call files_dir,$1)/.made-configure: $(call files_dir,$x)/.made-linkup))
endef

epkg = $(call build_dir,epkg)/epkg/epkg

define package
$(call files_dir,$1)/.made-fetch:
	mkdir -p $(call files_dir,$1)
	$(value $1_fetch)
	touch $$@
fetch-$1: $(call files_dir,$1)/.made-fetch
unfetch-$1:; rm -rf $(call files_dir,$1)/.made-fetch $(call build_dir,$1)
refetch-$1: unfetch-$1 $(call files_dir,$1)/.made-fetch
$(call files_dir,$1)/.made-extract: $(call files_dir,$1)/.made-fetch
	$(value $1_extract)
	touch $$@
unextract-$1:; rm -f $(call files_dir,$1)/.made-extract
reextract-$1: unextract-$1 $(call files_dir,$1)/.made-extract
extract-$1: $(call files_dir,$1)/.made-extract
$(call files_dir,$1)/.made-configure: $(call files_dir,$1)/.made-extract
	$(value $1_configure)
	touch $$@
unconfigure-$1:; rm -f $(call files_dir,$1)/.made-configure
reconfigure-$1: unconfigure-$1 $(call files_dir,$1)/.made-configure
$(call files_dir,$1)/.made-build: $(call files_dir,$1)/.made-configure
	$(value $1_build)
	touch $$@
build-$1: $(call files_dir,$1)/.made-build
unbuild-$1:; rm -f $(call files_dir,$1)/.made-build
rebuild-$1: unbuild-$1 $(call files_dir,$1)/.made-build
$(call files_dir,$1)/.made-install: $(call files_dir,$1)/.made-build $(call files_dir,epkg)/.made-build
	$(epkg) -r $1 || true
	rm -rf $(call install_dir,$1)
	$(value $1_install)
	touch $$@
install-$1: $(call files_dir,$1)/.made-install
uninstall-$1:; rm -f $(call files_dir,$1)/.made-install
reinstall-$1: uninstall-$1 $(call files_dir,$1)/.made-install
$(call files_dir,$1)/.made-linkup: $(call files_dir,$1)/.made-install $(call files_dir,epkg)/.made-build
	$(epkg) $1-$(value $1_version) | tee $$@.epkg-log
	! grep '^    !' $$@.epkg-log >/dev/null
	rm -f $$@.epkg-log
	touch $$@
relinkup-$1: unlinkup-$1 $(call files_dir,$1)/.made-linkup
unlinkup-all: unlinkup-$1
unlinkup-$1: $(call files_dir,epkg)/.made-build
	$(epkg) -r $1-$(value $1_version) || true
	rm -f $(call files_dir,$1)/.made-linkup
linkup-$1: $(call files_dir,$1)/.made-linkup
clean: clean-$1
clean-$1:; rm -rf $(call files_dir,$1)
endef

include epkg/Makefile.include
